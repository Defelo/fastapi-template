[tool.poetry]
name = "fastapi-template"
version = "0"
description = ""
authors = ["Defelo <elodef42@gmail.com>"]
readme = "README.md"
license = "GPL-3.0-only"
homepage = "https://github.com/Defelo/fastapi-template"
repository = "https://github.com/Defelo/fastapi-template"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.78.0"
uvicorn = "^0.18.2"
aiohttp = "^3.8.1"
aioredis = "^2.0.1"
SQLAlchemy = "^1.4.39"
aiomysql = "^0.1.1"
asyncpg = "^0.25.0"
sentry-sdk = "^1.6.0"
pydantic = "^1.9.1"

[tool.poetry.dev-dependencies]
flake8 = "^4.0.1"
isort = "^5.10.1"
black = "^22.6.0"
wemake-python-styleguide = "^0.16.1"
mypy = "^0.961"
SQLAlchemy = { extras = ["mypy"], version = "^1.4.39" }
coverage = "^6.4"
parameterized = "^0.8.1"

[tool.poe.tasks]
api = { script = "api.main:main", envfile = ".env" }
flake8 = "flake8 . --count --statistics --show-source"
isort = "isort ."
black = "black ."
format = ["isort", "black"]
mypy = "mypy ."
lint = ["format", "mypy", "flake8"]
test = { shell = "PYTHONWARNINGS=ignore python -m unittest discover -v tests", interpreter = "bash" }
pre-commit = ["lint", "test"]

[tool.poe.tasks.coverage]
shell = """
set -e
PYTHONWARNINGS=ignore coverage run --branch --source=api -m unittest discover -v tests
coverage report
if [[ "$xml" = True ]]; then coverage xml; fi
if [[ "$html" = True ]]; then coverage html && xdg-open htmlcov/index.html; fi
if [[ "$clean" = True ]]; then coverage erase; fi
"""
interpreter = "bash"

[tool.poe.tasks.coverage.args.xml]
options = ["--xml"]
type = "boolean"

[tool.poe.tasks.coverage.args.html]
options = ["--html"]
type = "boolean"

[tool.poe.tasks.coverage.args.clean]
options = ["--no-clean"]
type = "boolean"
default = true

[tool.poe.tasks.setup]
shell = """
set -ex
poetry install --no-root
if ! [[ -e .env ]]; then cp fastapi.env .env; fi
./pre-commit.sh install
unset VIRTUAL_ENV
git submodule update --init
git submodule foreach 'poe setup'
"""
interpreter = "bash"

[tool.black]
target-version = ["py310"]
line-length = 120
skip-magic-trailing-comma = true

[tool.isort]
profile = "black"
py_version = 310
line_length = 120
lines_after_imports = 2
reverse_relative = true
sections = ["FUTURE", "STDLIB", "FIRSTPARTY", "THIRDPARTY", "LOCALFOLDER"]

[tool.mypy]
strict = true
ignore_missing_imports = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.coverage.run]
omit = ["api/__main__.py", "tests/*"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
